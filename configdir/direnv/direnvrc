# --------------------- for python 3 ------------------------
# Sample .envrc
# export VIRTUAL_ENV=.venv
# layout python-venv python3

realpath() {
	[[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}
layout_python-venv() {
	local python=${1:-python3}
	[[ $# -gt 0 ]] && shift
	unset PYTHONHOME
	if [[ -n $VIRTUAL_ENV ]]; then
	    VIRTUAL_ENV=$(realpath "${VIRTUAL_ENV}")
	else
	    local python_version
	    python_version=$("$python" -c "import platform; print(platform.python_version())")
	    if [[ -z $python_version ]]; then
	        log_error "Could not detect Python version"
	        return 1
	    fi
	    VIRTUAL_ENV=$PWD/.direnv/python-venv-$python_version
	fi
	export VIRTUAL_ENV
	if [[ ! -d $VIRTUAL_ENV ]]; then
	    log_status "no venv found; creating $VIRTUAL_ENV"
	    "$python" -m venv "$VIRTUAL_ENV"
	fi

	PATH="${VIRTUAL_ENV}/bin:${PATH}"
	export PATH
}

# ------------------- for ruby -----------------------
# Sample .envrc
# use ruby 2.4.4
# layout ruby
# bundle_check

use_ruby() {
    RUBY_VERSION="$1"

    RUBIES_DIR="$HOME/.rubies"
    RUBY_PREFIX="$RUBIES_DIR/ruby-$RUBY_VERSION"
    if [ -s "$RUBY_PREFIX" ]; then
        load_prefix "$RUBY_PREFIX"
        layout_ruby
    else
        tput setaf 1
        echo "Ruby $RUBY_VERSION not available; using default"
        echo "See http://blog.differentpla.net/blog/2019/01/30/ruby-install/"
        tput sgr0
    fi
}


bundle_check() {
    # This has to come after 'layout ruby'
    if [ -f Gemfile ]; then
        gem list -i '^bundler$' >/dev/null || \
            gem install --no-ri --no-rdoc bundler && \
            bundle check
    fi
}

# ------------------ for nvm -------------------


# ------------------ for go -------------------
# Usage: layout golang
#
# Sets up environment for a Go project using the alternative gb build tool. Also
# works with the official dep package.In addition to project executables on
# PATH, this includes an exclusive, project- local GOPATH which enables many
# tools like gocode and oracle to "just work".
#
# http://getgb.io/
# https://golang.github.io/dep/
#
# use `layout golang` in your project .envrcs.

layout_golang() {
  export GOPATH="$PWD/vendor:$PWD"
  PATH_add "$PWD/vendor/bin"
  PATH_add bin
}

# --------------- helper.sh support for nvm -------------------
# see: https://github.com/steve-ross/direnv-helpers
# source ~/.config/direnv/helpers.sh
