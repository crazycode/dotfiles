# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
# (****) ZSH_THEME="risto"
#ZSH_THEME="rkj-repos"
#ZSH_THEME="wedisagree"
ZSH_THEME="crazycode"
#ZSH_THEME="fast"


# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias gs="stree"

alias o="open"

# git
alias co="git co"
alias merge="git merge"
alias pull="git pull"
alias push="git push"

alias service="brew services"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# The ._ files are resource forks as mentioned in other answers. However,
# there's a better way to get rid of them when using tar
export COPYFILE_DISABLE=true

# Comment this out to disable weekly auto-update checks
DISABLE_AUTO_UPDATE="true"


function lazy_load() {
    local load_func=${1}
    local lazy_func="lazy_${load_func}"

    shift
    for i in ${@}; do
        alias ${i}="${lazy_func} ${i}"
    done

    eval "
    function ${lazy_func}() {
        unset -f ${lazy_func}
        lazy_load_clean $@
        eval ${load_func}
        unset -f ${load_func}
        eval \$@
    }
    "
}

function lazy_load_clean() {
    for i in ${@}; do
        unalias ${i}
    done
}

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(ant autojump brew capistrano coffee gem git git-flow github gradle golang gnu-utils history-substring-search mvn osx pip pipenv rails rake ruby rsync screen tmux tmuxinator sbt svn scala bundler virtualenv safe-paste vagrant docker safe-paste docker-machine-use sdk)

source $ZSH/oh-my-zsh.sh

alias v=vagrant

alias setup-http-proxy='source ~/bin/http-proxy'

alias tmux='direnv exec / tmux'
eval "$(direnv hook zsh)"
# Customize to your needs...
export PLAY_HOME=$HOME/opt/play-1.4.4
#export PLAY_HOME=$HOME/opt/play-1.3.2

#export ANDROID_HOME=$HOME/opt/android-sdk-macosx
export ANDROID_HOME=$HOME/opt/android-sdk
# please run "brew install coreutils" first.
# brew --prefix coreutils => /usr/local/opt/coreutils

#export EDITOR="emacs -q"
#export VISUAL="emacs -q"
export EDITOR="vi"
export VISUAL="vi"


# 检查新版 homebrew 目录
if [ -f "/opt/homebrew/README.md" ]; then
    export HOMEBREW_HOME=/opt/homebrew
else
    export HOMEBREW_HOME=/usr/local
fi


export GROOVY_HOME=/usr/local/opt/groovy/libexec
#export GRADLE_HOME=$HOME/opt/gradle-2.13
export GRADLE_HOME=/usr/local/Cellar/gradle/3.4/libexec
#export PATH=/usr/local/opt/python@2/libexec/bin:$HOME/opt/go/bin:$GRADLE_HOME/bin:$HOMEBREW_HOME/opt/coreutils/libexec/gnubin:/usr/local/sbin:/usr/local/bin:$PATH:$HOME/bin:$PLAY_HOME:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:/usr/local/sbin:$HOME/.cabal/bin:/usr/local/opt/go/libexec/bin
export PATH=$HOMEBREW_HOME/opt/coreutils/libexec/gnubin:$HOME/opt/go/bin:$GRADLE_HOME/bin:/usr/local/sbin:/usr/local/bin:$PATH:$HOME/bin:$PLAY_HOME:$HOME/.cabal/bin:/usr/local/opt/go/libexec/bin
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"


# use JAVA_HOME
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
#
#export JAVA_OPTS="-server -Xmx1024m -XX:PermSize=64M -XX:MaxPermSize=256m"
export JAVA_OPTS="-server -Xmx1024m"


# fix git svn issue.
export PERL5LIB="/Applications/Xcode.app/Contents/Developer/Library/Perl/5.16/darwin-thread-multi-2level"

export GOPATH=$HOME/opt/go

# for docker
#function load_docker() {
#  if [[ "$(docker-machine status default)" == "Running" ]]
#  then
#      eval "$(docker-machine env default)"
#  fi
#}
#lazy_load load_docker docker docker-compose

#PATH=/usr/local/mysql/bin:$JAVA_HOME/bin:$PATH:$HOME/.rvm/bin:$GOPATH/bin # Add RVM to PATH for scripting
#PATH=/usr/local/mysql/bin:$PATH:$HOME/.rvm/bin:$GOPATH/bin # Add RVM to PATH for scripting

# 设置当前ruby版本，用于Gemfile选择当前版本
RUBY_VERSION=2.6.6

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8


export PATH=$PATH:$HOME/Library/Python/3.7/bin:~/opt/sonar-scanner/bin:/usr/local/texlive/2019basic/bin/x86_64-darwin:~/opt/PanBook:$HOMEBREW_HOME/opt/mysql-client@5.7/bin

#test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/mc mc

# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles

# Lazyload NVM
export NVM_DIR="$HOME/.nvm"
function load_nvm() {
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  #export PATH=$HOME/.nvm/versions/node/v10.15.3/bin:$PATH
}
lazy_load load_nvm nvm node pnpm npm yarn sshync npx pnpx cnpm cz

# lazyload rvm
function load_rvm() {
   [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
}
lazy_load load_rvm rvm ruby rails rake rdoc ri bundle bi bu cheat gem

# lazyload sdkman
#export SDKMAN_DIR="$HOME/.sdkman"
#function load_sdkman() {
  #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
#  [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
#}
#lazy_load load_sdkman sdk java javac gradle scala sbt mvn

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!

# __conda_setup="$('/Users/tanglq/opt/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#    eval "$__conda_setup"
# else
#     if [ -f "/Users/tanglq/opt/miniforge3/etc/profile.d/conda.sh" ]; then
#         . "/Users/tanglq/opt/miniforge3/etc/profile.d/conda.sh"
#     else
#         export PATH="/Users/tanglq/opt/miniforge3/bin:$PATH"
#     fi
# fi
# unset __conda_setup

# <<< conda initialize <<<


# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true
